#
# SEED: 
variable SEED equal                 1
#
# T: simulation temperature
variable T equal                 0.0625
#
# DT: number of KMC steps
variable DT equal 400.0
#
# IN_FILLER: stitch input filename
variable IN_FILLER world vf03_nvox100.st

# OUT_FILLER: output filename
variable OUT_FILLER world variable_phase_fraction.st

#
seed		 ${SEED}

# Declare app
app_style diffusion/multiphase

# 
dimension	 3

# 
boundary p p p

# 
lattice		 sc/26n 1.0
region		 box block 0 100 0 100 0 100
create_box	 box
create_sites     box

# Define phase labels '1' '2' and '3'
# Must always be after 'create_sites'
# Define and pin phase '1'
diffusion/multiphase pin 1
# Define phases '2' and '3'
diffusion/multiphase phase 2
diffusion/multiphase phase 3

# Pairwise phase weights are optional; default 1.0
# Need only input weight once for pair (i,j); symmetry 
#    is enforced in app; same weight is internally 
#    assigned to pair(j,i)
# diffusion/multiphase weight <double> pair <int phase_1,int phase_2> 
diffusion/multiphase weight 0.5 pair 1 2

# Initialize filler from stitch file;
# In this case -- the filler phase label is '1' with 
#    all remaining sites set to a phase value '0';
# Fact that non-filler values are '0' is leveraged below;
# Read 'stitch' file using 'first' time step in file
# Sets the variable 'i1' in app diffusion/multiphase
set i1 stitch ${IN_FILLER} first

# NOTE: this command is sensitive to 'phase' values 
# Distributes 2/3 of phase 0 to phase 2
# Distributes 1/3 of phase 0 to phase 3
# Sets phase 2 volume fraction .667 for non-filler phase 0
set i1 value 2 fraction .667 if i1 < 1
# Sets phase 3 to balance of non-filler phase
set i1 value 3 if i1 < 1

solve_style tree
sector yes
diag_style       energy
temperature	 ${T}
stats            10.0

# Dump stitch file and images at time intervals of 100
dump         dump.id stitch 100 ${OUT_FILLER} i1
dump threedee image 100 variable_phase_fraction.*.jpg site site crange 1 3 drange 1 1 shape cube box no 1 zoom 1.3 size 512 512 sdiam 1.05
dump_modify threedee scolor * red/white/black backcolor gray

run             ${DT}
